<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- <beans:bean id="propertyConfigurer"
				class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
				p:location="file:/etc/tomcat7/rmx-environment.properties" /> --> 


<!-- classpath: -->
<!-- file:/Users/johnperion/WorkFiles/z21/sara/webservice/school_reg_ws/src/main/resources/school_reg_application.properties -->

	<beans:bean id="propertyConfigurer"
				class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
				p:location="classpath:/school_reg_application.properties" />
				

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" /> 
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.z21.controllers" />

	
	
	<beans:bean id="StudentRegistrationService" class="com.z21.services.StudentRegistrationService">
		<beans:property name="studentRegistrationDao" ref="StudentRegistrationDao" />
	</beans:bean>
	

	<beans:bean id="StudentRegistrationDao" class="com.z21.dao.StudentRegistrationDao">
			<beans:property name="defaultHost" value="${mongo.db.host}" />
			<beans:property name="defaultPort" value="${mongo.db.port}" />	
			<beans:property name="dbname" value="${mongo.db.dbname}" />
			<beans:property name="dbuser" value="${mongo.db.dbuser}" />
			<beans:property name="dbpass" value="${mongo.db.dbpass}" />
			
			<beans:property name="emailSender" value="${email.sender}" />	
			<beans:property name="emailTitle" value="${email.title}" />	
			<beans:property name="emailMessage" value="${email.message}" />	
			<beans:property name="emailPass" value="${email.pass}" />	
			
			
	</beans:bean>


	<beans:bean id="UserAuthenticationService" class="com.z21.services.UserAuthenticationService">
		<beans:property name="userAuthenticationDao" ref="UserAuthenticationDao" />
	</beans:bean>
	
	
	<beans:bean id="UserAuthenticationDao" class="com.z21.dao.UserAuthenticationDao">
			<beans:property name="defaultHost" value="${mongo.db.host}" />
			<beans:property name="defaultPort" value="${mongo.db.port}" />	
	</beans:bean>
	
	
		
	<beans:bean id="SchoolConfigurationService" class="com.z21.services.SchoolConfigurationService">
		<beans:property name="configurationDao" ref="SchoolConfigurationDao" />
	</beans:bean>

	<beans:bean id="SchoolConfigurationDao" class="com.z21.dao.SchoolConfigurationDao">
			<beans:property name="defaultHost" value="${mongo.db.host}" />
			<beans:property name="defaultPort" value="${mongo.db.port}" />			
	</beans:bean>


	 <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <beans:property name="maxUploadSize" value="20971520"/>
	 </beans:bean> 

</beans:beans>
